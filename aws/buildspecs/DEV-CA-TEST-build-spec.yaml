version: 0.2

env:
  variables:
    batchMode: "true"
    awsConnectionEnabled: "false"

phases:
  install:
    runtime-versions:
      java: corretto8
    commands:
      - export CODE_ARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain digiroad --domain-owner 475079312496 --region eu-west-1 --query authorizationToken --output text)
      - aws codeartifact login --tool npm --repository digiroad_npm_packages --domain digiroad --domain-owner 475079312496
      - echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee -a  /etc/apt/sources.list.d/sbt.list
      - curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - apt-get update
      - apt-get install sbt
      - npm install -g yarn
      - npm install && yarn install --ignore-engines
      - npm install -g grunt-cli
  pre_build:
    commands:
      - pip install --upgrade awscli
      - $(aws ecr get-login --no-include-email --region eu-west-1)
      - rm conf/env.properties
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - grunt test
      - sbt "project digiroad2-oracle" "run-main fi.liikennevirasto.digiroad2.util.DataFixture test"
      - sbt test
      - grunt deploy
      - sbt clean
      - sbt assembly
      - docker build -f aws/fargate/Dockerfile --build-arg image=public.ecr.aws/docker/library/amazoncorretto:8-alpine-jre  -t $ECR_REPOSITORY_NAME:latest .
      - echo Post-build started on `date`
      - docker tag $ECR_REPOSITORY_NAME:latest $ECR_REPOSITORY_URI:ca_pipeline_test_image
      - docker tag $ECR_REPOSITORY_NAME:latest $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER
      - docker tag $ECR_REPOSITORY_NAME:latest $ECR_REPOSITORY_URI:$COMMIT_HASH
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER
      - docker push $ECR_REPOSITORY_URI:$COMMIT_HASH
  post_build:
    commands:
      - printf '[{"name":"%s","imageUri":"%s"}]' $ECS_SERVICE_NAME $ECR_REPOSITORY_URI:latest > imagedefinitions.json
artifacts:
  files: imagedefinitions.json